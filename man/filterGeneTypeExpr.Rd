% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TCGAassist.R
\name{filterGeneTypeExpr}
\alias{filterGeneTypeExpr}
\title{Filter expression data by gene type}
\usage{
filterGeneTypeExpr(
  expr,
  rownname = "gene_name",
  fil_col = "gene_type",
  filter = NULL,
  delcol = 1:3
)
}
\arguments{
\item{expr}{A data frame or matrix containing gene expression data. Rows are typically genes, and columns include
attribute columns (e.g., gene name, gene type) and numeric expression columns.}

\item{rownname}{A character string specifying the column name to be used as row names (e.g., gene name). Values in this
column will be deduplicated. Defaults to "gene_name".}

\item{fil_col}{A character string specifying the column name used for filtering (e.g., gene type column). Defaults to "gene_type".}

\item{filter}{A character string or vector specifying the gene types to retain (e.g., c("protein_coding", "lncRNA")).
If NULL, all gene types are retained. Defaults to NULL.}

\item{delcol}{An integer vector specifying the indices of non-numeric columns to remove (e.g., attribute columns).
Defaults to removing the first 3 columns (c(1:3)).}
}
\value{
A data frame of filtered expression data, with row names set to values from the specified `rownname` column,
  and columns restricted to numeric expression columns.
}
\description{
This function filters gene expression data by retaining specific types of genes based on a specified column (e.g., gene type).
It also performs data cleaning (deduplication, NA removal, filtering low-variance rows) and format standardization
(setting row names, removing redundant columns).
}
\examples{
# Example data
expr_data <- data.frame(
  id = 1:5,
  gene_name = c("geneA", "geneB", "geneA", "geneC", "geneD"),
  gene_type = c("protein_coding", "lncRNA", "protein_coding", "miRNA", "lncRNA"),
  sample1 = c(10, 20, 15, 5, 25),
  sample2 = c(12, 18, 16, 6, 22),
  stringsAsFactors = FALSE
)

# Filter protein-coding genes and lncRNAs, with "gene_name" as row names
filtered_data <- filterGeneTypeExpr(
  expr = expr_data,
  rownname = "gene_name",
  fil_col = "gene_type",
  filter = c("protein_coding", "lncRNA")
)
}
